name: Test CICD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Create GCS credentials file from Secrets
      run: echo "${{ secrets.GCS_CREDENTIALS }}" | base64 -d > gcs-creds.json

    - name: Show gcs-creds.json
      run: cat gcs-creds.json

    - name: Validate gcs-creds.json
      run: cat gcs-creds.json | jq .

    - name: Debug env
      env:
        GOOGLE_APPLICATION_CREDENTIALS: gcs-creds.json
      run: echo $GOOGLE_APPLICATION_CREDENTIALS

    - name: Pull data from DVC
      env:
        GOOGLE_APPLICATION_CREDENTIALS: gcs-creds.json
      run:
        dvc pull

#    - name: Decode GCP credentials
#      run: |
#        echo "${{ secrets.GCS_CREDENTIALS }}" | base64 -d > gcp-key.json
#        export GOOGLE_APPLICATION_CREDENTIALS=gcp-key.json

#    - name: Authenticate with GCS
#      env:
#        GOOGLE_APPLICATION_CREDENTIALS: gcs-creds.json
#      run: |
#        dvc remote modify myremote credentialpath gcs-creds.json

    - name: Run Preprocessing
      run: python src/preprocess.py

    - name: Run Training
      run: python src/train_register.py

    - name: Run tests with pytest
      run: |
        pytest tests/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: learn4fun24x7/california-housing-api:latest